// <auto-generated />
using System;
using AirBNBAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirBNBAPI.Migrations
{
    [DbContext(typeof(AirBNBAPIContext))]
    [Migration("20230405185400_added more seeding")]
    partial class addedmoreseeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AirBnb.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Bilal.youssry@gmail.com",
                            FirstName = "Bilal",
                            LastName = "Yousef"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maxmetz8@gmail.com",
                            FirstName = "Max",
                            LastName = "Metz"
                        });
                });

            modelBuilder.Entity("AirBnb.Model.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCover = false,
                            Url = "https://dq1eylutsoz4u.cloudfront.net/2019/12/20060024/adult-man-baby-boomer-clean-cut_t20_b8wV6V-800x600-50-year-old-man.jpg"
                        },
                        new
                        {
                            Id = 2,
                            IsCover = false,
                            Url = "https://as1.ftcdn.net/v2/jpg/04/70/50/70/1000_F_470507000_FxGToXZnkwPgMYAc5KdX9SvtlYLjPhKf.jpg"
                        },
                        new
                        {
                            Id = 3,
                            IsCover = true,
                            LocationId = 1,
                            Url = "https://www.chr-apartments.com/sites/default/files/styles/tile_image_cropped/public/video_thumbnails/Rwiy-8x8o5w.jpg?itok=X0MqiZeY"
                        },
                        new
                        {
                            Id = 4,
                            IsCover = true,
                            LocationId = 2,
                            Url = "https://www.mapofjoy.nl/wp-content/uploads/2022/11/kasteel-de-haar-mapofjoy.jpg"
                        },
                        new
                        {
                            Id = 5,
                            IsCover = true,
                            LocationId = 3,
                            Url = "https://cf.bstatic.com/images/hotel/max1024x768/209/209048312.jpg"
                        },
                        new
                        {
                            Id = 6,
                            IsCover = true,
                            LocationId = 4,
                            Url = "https://static.wixstatic.com/media/5314a7_0bebda9bf9a64502a678d9d0a5299a16~mv2.jpg/v1/fill/w_640,h_476,al_c,q_80,usm_0.66_1.00_0.01,enc_auto/5314a7_0bebda9bf9a64502a678d9d0a5299a16~mv2.jpg"
                        },
                        new
                        {
                            Id = 7,
                            IsCover = true,
                            LocationId = 5,
                            Url = "https://comfortable-room-in-centrum-hertogenbosch-s.booked.net/data/Photos/OriginalPhoto/7778/777848/777848626/Comfortable-Room-In-Centrum-Hertogenbosch-s-Hertogenbosch-Exterior.JPEG"
                        },
                        new
                        {
                            Id = 8,
                            IsCover = true,
                            LocationId = 6,
                            Url = "https://vipio-production.s3.eu-central-1.amazonaws.com/variants/lqvol5wgqw9vnpkbu749hbw9w0fz/484f81c71345635b474672abe3162578b4a7d2c457f7211ce8381b69429182cb"
                        },
                        new
                        {
                            Id = 9,
                            IsCover = true,
                            LocationId = 7,
                            Url = "https://www.aanhetij.com/wp-content/uploads/sites/4/2018/07/2801_overhoeks_Blok_A1_c2_01-1024x655.jpg?t=1676034752"
                        },
                        new
                        {
                            Id = 10,
                            IsCover = true,
                            LocationId = 8,
                            Url = "https://www.lpw.be/blog/wp-content/uploads/2020/03/LPW-Pools_LaPlage-11_Pearl-Grey_-2-1-scaled.jpg"
                        },
                        new
                        {
                            Id = 11,
                            IsCover = true,
                            LocationId = 9,
                            Url = "https://media.inmobalia.com/imgV1/B98Le8~d7M9k3DegigWkzHXQlgzMFGqGJJp6ZRUcpX033lqadFBp2i4GGW4X3JDm~11J_coE7XMgSyFWgioo4vCKf4wULfyiG_jT740CcoSCZWD4a5INBsSGgFKceH3cBeinqAa3gLH_su~4pk8M~Bodk6u55hMd85jPRuGVFtndsb_KIdGitYg6mYc0if9~aEx~TbbEG78TVl8fUHU6THfH24xtjnOrdR56IuAjbmoYpn1h0BpyhyWPYcXCSRbtlzDJUUV4OY8DykPts3bl4PDHxmJToMHm2kizr6AdxW1FPZ_h~lWcLwfkWcb_aNsRy9y3lOTmJwMP9rhI0WMhUtqJk3IWw0_u2Kw6uASDSUilpQFXEDLvGSsIv~o-.jpg"
                        },
                        new
                        {
                            Id = 12,
                            IsCover = true,
                            LocationId = 10,
                            Url = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/301483769.jpg?k=5b851fb7a31f48b7ad4e06e0709a9ab552705ac58148dfeaeb0a28e304919c3c&o=&hp=1"
                        },
                        new
                        {
                            Id = 13,
                            IsCover = false,
                            LocationId = 1,
                            Url = "https://www.cbw-erkend.nl/uploads/inspiration/klein-appartement-inrichten-tips-inspiratie.95e5ed.jpg"
                        },
                        new
                        {
                            Id = 14,
                            IsCover = false,
                            LocationId = 2,
                            Url = "https://kastelenmagazine.nl/wp-content/uploads/2021/03/20-kastelen-die-je-gezien-moet-hebben.002.jpeg"
                        },
                        new
                        {
                            Id = 15,
                            IsCover = false,
                            LocationId = 3,
                            Url = "https://www.visitzandvoort.nl/uploads/Strand-appartement-Zandvoort-1680x633.jpg"
                        },
                        new
                        {
                            Id = 16,
                            IsCover = false,
                            LocationId = 4,
                            Url = "https://www.privatevillasofitaly.com/wp-content/uploads/Breakwater.Como_.jpg"
                        },
                        new
                        {
                            Id = 17,
                            IsCover = false,
                            LocationId = 5,
                            Url = "https://images0.persgroep.net/rcs/Ow8bUxgkHiunjQxenWP6q51JzAw/diocontent/158813549/_fill/1349/900/?appId=21791a8992982cd8da851550a453bd7f&quality=0.9"
                        },
                        new
                        {
                            Id = 18,
                            IsCover = false,
                            LocationId = 6,
                            Url = "https://boomhutdrenthe.nl/wp-content/uploads/2019/12/luxe-boomhut-aan-de-rand-van-landgoed-camping-tolhek-512x250.jpg"
                        },
                        new
                        {
                            Id = 19,
                            IsCover = false,
                            LocationId = 7,
                            Url = "https://www.huis-inrichten.com/wp-content/uploads/modern-elegant-appartement-van-164m2.jpg"
                        },
                        new
                        {
                            Id = 20,
                            IsCover = false,
                            LocationId = 8,
                            Url = "https://www.zwembad-plaatsen-tuin.be/wp-content/uploads/2021/11/Zwembad-plaatsen-in-de-tuin-tuin.webp"
                        },
                        new
                        {
                            Id = 21,
                            IsCover = false,
                            LocationId = 9,
                            Url = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/408740280.jpg?k=c815e0a193ab61c6180f4430c46bad60a435fdeb28e03acfda1bd32333b0d9ff&o=&hp=1"
                        },
                        new
                        {
                            Id = 22,
                            IsCover = false,
                            LocationId = 10,
                            Url = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/301483797.jpg?k=7d089acdca2fd57c7d767a167a3f78707d9a7b4dcee73218e86140293a45db88&o=&hp=1"
                        },
                        new
                        {
                            Id = 23,
                            IsCover = false,
                            Url = "https://www.cameo.com/cdn-cgi/image/fit=cover,format=auto,width=500,height=500/https://cdn.cameo.com/resizer/static/user/avatar-yZlgNegGG.jpg"
                        });
                });

            modelBuilder.Entity("AirBnb.Model.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("AvatarId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId")
                        .IsUnique()
                        .HasFilter("[AvatarId] IS NOT NULL");

                    b.ToTable("Landlord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 55,
                            AvatarId = 1,
                            FirstName = "Herman ",
                            LastName = "Mol"
                        },
                        new
                        {
                            Id = 2,
                            Age = 61,
                            AvatarId = 2,
                            FirstName = "Jaap ",
                            LastName = "Keizer"
                        },
                        new
                        {
                            Id = 3,
                            Age = 23,
                            AvatarId = 23,
                            FirstName = "Gert ",
                            LastName = "Jan"
                        });
                });

            modelBuilder.Entity("AirBnb.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Features")
                        .HasColumnType("int");

                    b.Property<int?>("LandlordId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<float>("PricePerDay")
                        .HasColumnType("real");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Mooi huis gelegen in het centrum",
                            Features = 1,
                            LandlordId = 1,
                            NumberOfGuests = 3,
                            PricePerDay = 50.99f,
                            Rooms = 3,
                            SubTitle = "Huis word al jaren goed bevonden door 100+ klanten",
                            Title = "BeeldhouwerKasteel",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Prachtig kasteel van Nederland",
                            Features = 1,
                            LandlordId = 2,
                            NumberOfGuests = 20,
                            PricePerDay = 500.99f,
                            Rooms = 4,
                            SubTitle = "Prijzig, maar een echte ervaring.",
                            Title = "Kasteel",
                            Type = 5
                        },
                        new
                        {
                            Id = 3,
                            Description = "Een gezellig appartement dichtbij het strand",
                            Features = 1,
                            LandlordId = 1,
                            NumberOfGuests = 4,
                            PricePerDay = 70.5f,
                            Rooms = 2,
                            SubTitle = "Geniet van een ontspannen vakantie in ons mooie appartement",
                            Title = "Strandhuisje",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Een prachtige villa met uitzicht op het meer",
                            Features = 4,
                            LandlordId = 2,
                            NumberOfGuests = 8,
                            PricePerDay = 320.99f,
                            Rooms = 5,
                            SubTitle = "Ontspan en geniet van de natuur in deze geweldige villa",
                            Title = "Lakeside Villa",
                            Type = 5
                        },
                        new
                        {
                            Id = 5,
                            Description = "Een gezellige kamer in het centrum van de stad",
                            Features = 1,
                            LandlordId = 3,
                            NumberOfGuests = 2,
                            PricePerDay = 25.99f,
                            Rooms = 1,
                            SubTitle = "Een betaalbare optie voor een stedentrip",
                            Title = "Centrumkamer",
                            Type = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Een unieke boomhut in het bos",
                            Features = 32,
                            LandlordId = 1,
                            NumberOfGuests = 4,
                            PricePerDay = 90.99f,
                            Rooms = 3,
                            SubTitle = "Een avontuurlijke vakantie in onze boomhut",
                            Title = "Boomhut in het bos",
                            Type = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Een modern appartement in het hart van de stad",
                            Features = 1,
                            LandlordId = 2,
                            NumberOfGuests = 3,
                            PricePerDay = 85.5f,
                            Rooms = 2,
                            SubTitle = "Een luxe verblijf in een bruisende omgeving",
                            Title = "Stadsluxe",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Een ruime woning met grote tuin en zwembad",
                            Features = 18,
                            LandlordId = 3,
                            NumberOfGuests = 6,
                            PricePerDay = 280.99f,
                            Rooms = 4,
                            SubTitle = "Een ideale plek voor een gezinsvakantie",
                            Title = "Gezinswoning met zwembad",
                            Type = 5
                        },
                        new
                        {
                            Id = 9,
                            Description = "Een sfeervol appartement in het historische centrum",
                            Features = 4,
                            LandlordId = 1,
                            NumberOfGuests = 4,
                            PricePerDay = 60.99f,
                            Rooms = 2,
                            SubTitle = "Ontdek de geschiedenis van de stad vanuit ons gezellige appartement",
                            Title = "Historisch appartement",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Een prachtige villa aan de kust met privézwembad",
                            Features = 10,
                            LandlordId = 2,
                            NumberOfGuests = 10,
                            PricePerDay = 800.99f,
                            Rooms = 6,
                            SubTitle = "Een luxe verblijf met directe toegang tot het strand",
                            Title = "Luxe kustvilla",
                            Type = 5
                        });
                });

            modelBuilder.Entity("AirBnb.Model.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LocationId");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Discount = 0f,
                            EndDate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Discount = 0f,
                            EndDate = new DateTime(2022, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            StartDate = new DateTime(2022, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AirBnb.Model.Image", b =>
                {
                    b.HasOne("AirBnb.Model.Location", "Location")
                        .WithMany("Images")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AirBnb.Model.Landlord", b =>
                {
                    b.HasOne("AirBnb.Model.Image", "Avatar")
                        .WithOne("Landlord")
                        .HasForeignKey("AirBnb.Model.Landlord", "AvatarId");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("AirBnb.Model.Location", b =>
                {
                    b.HasOne("AirBnb.Model.Landlord", "Landlord")
                        .WithMany("Locations")
                        .HasForeignKey("LandlordId");

                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("AirBnb.Model.Reservation", b =>
                {
                    b.HasOne("AirBnb.Model.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId");

                    b.HasOne("AirBnb.Model.Location", "Location")
                        .WithMany("Reservations")
                        .HasForeignKey("LocationId");

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AirBnb.Model.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("AirBnb.Model.Image", b =>
                {
                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("AirBnb.Model.Landlord", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("AirBnb.Model.Location", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
